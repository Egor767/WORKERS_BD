using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApplication29
{
    class Program
    {
        static void Main(string[] args)
        {
            while (true)
            {
                Stack<string> shop = new Stack<string>();
                shop.Push("Milk");
                shop.Push("Bread");
                shop.Push("Meal");

                Stack<string> people = new Stack<string>();
                people.Push("Egor");
                people.Push("Kirill");
                people.Push("Aleksandr");
                people.Push("Viktor");
                Console.Clear();
                Console.WriteLine("Методы Коллекции STAK<> С#");
                Console.WriteLine("1. Задание Стэка");
                Console.WriteLine("2. Длина Стэка");
                Console.WriteLine("3. Очищение стэка");
                Console.WriteLine("4. Проверка на наличие элемента в Стэке");
                Console.WriteLine("5. Добавление элемента в Стэк");
                Console.WriteLine("6. Возврат и удаление элемента из стэка");
                Console.WriteLine("7. Пример задачи на Стэк");
                Console.WriteLine("8. Выход");
                int k = int.Parse(Console.ReadLine());
                Console.Clear();
                if (k == 1)
                {
                    Console.WriteLine("Задание Стэка");
                    Console.WriteLine();
                    Console.WriteLine("Задание Стэка неизвестной длины: Stack<string> people = new Stack<string>()");
                    Console.WriteLine("Задание Стэка известной длины: Stack<string> people = new Stack<string>(10)");
                    Console.WriteLine();
                    Console.Write("Задайте стэк типа string с именем class длиной 5: ");
                    string s = Console.ReadLine();
                    while (s != "Stack<string> class = new Stack<string>(5)")
                    {
                        Console.Write("Неправильно, попробуйте еще раз: ");
                        s = Console.ReadLine();
                    }
                    Console.WriteLine("Правильно!");
                    Console.ReadKey();
                }
                if (k == 2)
                {
                    Console.WriteLine("Возврат длины Стэка");
                    Console.WriteLine();
                    Console.WriteLine("Если у нас есть Стэк <people> = 'Egor', 'Kirill', 'Aleksandr' ");
                    Console.WriteLine("Длину этого стэка можно узнать командой people.Count");
                    Console.WriteLine();
                    Console.Write("Узнайте длину стэка shop: ");
                    string s1 = Console.ReadLine();
                    while (s1 != "shop.Count")
                    {
                        Console.Write("Неправильно, попробуйте еще раз: ");
                        s1 = Console.ReadLine();
                    }
                    Console.WriteLine("Длина Стэка shop = {0}", shop.Count);
                    Console.WriteLine();
                    Console.ReadKey();
                }
                if (k == 3)
                {
                    Console.WriteLine("Очищение Стэка");
                    Console.WriteLine();
                    Console.WriteLine("Пусть у нас есть Стэк <people> = 'Egor', 'Kirill', 'Aleksandr'");
                    Console.WriteLine("people.Count --> {0}", people.Count);
                    Console.WriteLine();
                    Console.WriteLine("Командой people.Clear() можно удалить все элементы этого Стэка");
                    Console.WriteLine("people.Clear()");
                    Console.WriteLine("people  --> {}");
                    Console.WriteLine("people.Count  --> {0}", people.Count);
                    Console.WriteLine();
                    shop.Clear();
                    Console.Write("Очистите Стэк shop: ");
                    string s2 = Console.ReadLine();
                    while (s2 != "shop.Clear()")
                    {
                        Console.Write("Неправильно, попробуйте еще раз: ");
                        s2 = Console.ReadLine();
                    }
                    Console.WriteLine("Длина Стэка shop = {0}", shop.Count);
                    Console.WriteLine();
                    Console.ReadKey();

                }
                if (k == 4)
                {
                    Console.WriteLine("Поверка вхождение элемента в Стэк");
                    Console.WriteLine();
                    Console.WriteLine("Пусть у нас есть Стэк <people> = 'Egor', 'Kirill', 'Aleksandr','Viktor'");
                    Console.WriteLine("Команда people.Contains(string) проверяет входит ли строка string в Стэк people");
                    Console.WriteLine();
                    Console.WriteLine("Console.WriteLine(people.Contains('Egor'))  --> {0}  , т.e строка 'Egor' содержится в нашем Стэке", people.Contains("Egor"));
                    Console.WriteLine("Console.WriteLine(people.Contains('Misha'))  --> {0}  , т.e строка 'Misha' не содержится в нашем Стэке", people.Contains("Misha"));
                    Console.WriteLine("Можете попробовать свои слова, после чего введите строку END для окончания");
                    Console.Write("Имя: ");
                    string s3 = Console.ReadLine();
                    Console.WriteLine(people.Contains(s3));
                    while (s3 != "END")
                    {
                        Console.Write("Имя: ");
                        s3 = Console.ReadLine();
                        if (s3 == "END")
                        {
                            break;
                        }
                        Console.WriteLine(people.Contains(s3));
                    }
                    Console.WriteLine();
                    Console.ReadKey();

                }
                if (k == 5)
                {
                    Stack<string> people2 = new Stack<string>();
                    people2.Push("Egor");
                    people2.Push("Kirill");
                    people2.Push("Aleksandr");
                    people2.Push("Viktor");
                    Console.WriteLine("Добавление элемента в Стэк");
                    Console.WriteLine();
                    Console.WriteLine("Пусть у нас есть Стэк <people2> = 'Egor', 'Kirill', 'Aleksandr','Viktor'");
                    Console.WriteLine("Команда people2.Push(string) добавит в начало Стэка people2 строку string");
                    Console.WriteLine();
                    Console.WriteLine("people2.Push('Bob')");
                    people2.Push("Bob");
                    Console.WriteLine("<people2> = 'Bob', 'Egor', 'Kirill', 'Aleksandr'");
                    Console.WriteLine("Добавте несколько имен, после чего напишите END");
                    string s4 = "";
                    while (s4 != "END")
                    {
                        s4 = Console.ReadLine();
                        if (s4 == "END")
                        {
                            break;
                        }
                        people2.Push(s4);
                        Console.WriteLine("people2.Push({0})", s4);
                        Console.WriteLine("Стэк:");
                        foreach (string i in people2)
                        {
                            Console.WriteLine(i);
                        }
                        Console.WriteLine();
                    }

                    Console.WriteLine();
                    Console.ReadKey();
                }
                if (k == 6)
                {
                    Stack<string> people6 = new Stack<string>();
                    people6.Push("Egor");
                    people6.Push("Kirill");
                    people6.Push("Aleksandr");
                    people6.Push("Viktor");
                    Console.WriteLine("Возврат и удаление элемента из стэка");
                    Console.WriteLine();
                    Console.WriteLine("Метод Stak.Pop() извлекает и возвращает первый элемент из стека");
                    Console.WriteLine("А метод Stak.Peek() просто возвращает первый элемент из стека без его удаления");
                    Console.WriteLine("Пусть у нас есть Стэк <people6> = 'Egor', 'Kirill', 'Aleksandr','Viktor'");
                    Console.Write("Верните его первый элемент без удаления: ");
                    string s6 = Console.ReadLine();
                    while (s6 != "people6.Peek()")
                    {
                        Console.Write("Неправильно, попробуйте еще раз: ");
                        s6 = Console.ReadLine();
                    }
                    Console.WriteLine("people6.Peek() -> {0}", people6.Peek());

                    Console.WriteLine();
                    Console.Write("Теперь верните первый элемент и удалите его: ");
                    s6 = Console.ReadLine();
                    while (s6 != "people6.Pop()")
                    {
                        Console.Write("Неправильно, попробуйте еще раз: ");
                        s6 = Console.ReadLine();
                    }
                    Console.WriteLine("people6.Pop() -> {0}", people6.Pop());
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.ReadKey();
                }
                if (k == 7)
                {
                    Console.WriteLine("Задача на Стэк");
                    Console.WriteLine();
                    Console.WriteLine("Пусть дана строка, в которой могут находиться скобки вида: (), [] и {}");
                    Console.WriteLine("Необходимо определить правильно ли они расставлены");
                    Console.WriteLine("Вводите тестовые строки, а для завершение введите строку 'END'");
                    string l = "";
                    while (l != "END")
                    {
                        var open = new Stack<string>();
                        var close = new Stack<string>();
                        var open_2 = new Stack<string>();
                        var close_2 = new Stack<string>();
                        var solo = new Stack<string>();
                        l = Console.ReadLine();
                        if (l == "END")
                        {
                            break;
                        }
                        k = 1;
                        foreach (char i in l)
                        {
                            if (i == '(' || i == '{' || i == '[')
                            {
                                open.Push(i + "");
                            }
                            if (i == ']' || i == '}' || i == ')')
                            {
                                if (open.Count == 0)
                                {
                                    Console.WriteLine("Неправильно");
                                    k = 0;
                                    break;
                                }
                                if ((i == ']' && open.Peek() != "[") || (i == ')' && open.Peek() != "(") || (i == '}' && open.Peek() != "{"))
                                {
                                    Console.WriteLine("Неправильно");
                                    k = 0;
                                    break;
                                }
                                if ((i == ']' && open.Peek() == "[") || (i == ')' && open.Peek() == "(") || (i == '}' && open.Peek() == "{"))
                                {
                                    solo.Push(i + "");
                                    solo.Push(open.Peek() + "");
                                    open.Pop();
                                }
                                else
                                {
                                    close.Push(i + "");
                                }
                            }
                        }
                        if (close.Count == 0 && open.Count == 1 || close.Count == 1 && open.Count == 0)
                        {
                            Console.WriteLine("Неправильно");
                        }
                        if (k != 0)
                        {
                            foreach (string i in open)
                            {
                                open_2.Push(i);
                            }
                            foreach (string i in close)
                            {
                                close_2.Push(i);
                            }
                            if (close_2.Count != open_2.Count)
                            {
                                Console.WriteLine("Неправильно");
                            }
                            else
                            {

                                Console.WriteLine("Правильно");
                            }
                        }
                        Console.ReadKey();
                    }
                    Console.WriteLine();
                    Console.ReadKey();
                }
                if (k == 8)
                {
                    Console.WriteLine("Конец...");
                    break;
                }

            }
        }
    }
}
